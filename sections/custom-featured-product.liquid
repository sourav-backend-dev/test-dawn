<style>
  .cart-drawer {
  position: fixed;
  top: 0;
  left: -9999px;
  opacity: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.7);
  z-index: 99999;
  display: flex;
  flex-direction: column;
  padding: 24px;
  transition: left 0s 0.2s, opacity 0.2s;
}

.cart-drawer--active {
  left: 0;
  opacity: 1;
  transition: left 0s, opacity 0.2s;
}

.cart-drawer-box {
  width: 480px;
  background: #f5f5f5;
  border-radius: 12px;
  flex: 1;
  margin-left: auto;
  display: flex;
  flex-direction: column;
  overflow: auto;
  transition: 0.2s opacity, 0.2s transform;
  opacity: 0;
  transform: translateX(40px);
}

.cart-drawer--active .cart-drawer-box {
  transform: none;
  opacity: 1;
}

.cart-drawer-header {
  display: flex;
  align-items: center;
  padding: 24px;
  border-bottom: 1px solid #e7e7e7;
}

.cart-drawer-header h2 {
  color: #212529;
  flex: 1;
  font-weight: 500;
  font-size: 18px;
}

.cart-drawer-header-right {
  color: #a1a1a1;
  display: inline-flex;
  align-items: center;
  gap: 20px;
}

.cart-drawer-header-right-items {
  display: block;
  font-weight: 500;
}

.cart-drawer-header-right-close {
  width: 20px;
  color: #a1a1a1;
  cursor: pointer;
}

.cart-drawer-header-right-close:hover {
  color: #212529;
}

.cart-drawer-form {
  flex: 1;
  display: flex;
  flex-direction: column;
}

.cart-drawer-items {
  padding: 24px;
}

.cart-drawer-item {
  display: flex;
  align-items: center;
  border: 1px solid #e7e7e7;
  border-radius: 12px;
  background: white;
  overflow: hidden;
}

.cart-drawer-item + .cart-drawer-item {
  margin-top: 10px;
}

.cart-drawer-item-image {
  width: 120px;
}

.cart-drawer-item-image img {
  width: 120px;
  height: 120px;
  object-fit: cover;
}

.cart-drawer-item-main {
  flex: 1;
  padding: 0 24px;
}

.cart-drawer-item-main-flex {
  display: flex;
  align-items: center;
  gap: 20px;
}

.cart-drawer-item-main-flex-left {
  flex: 1;
}

.cart-drawer-item-main-flex-left h3 {
  font-size: 15px;
  font-weight: 500;
}

.cart-drawer-item-main-flex-left h3 a {
  color: #212529;
}

.cart-drawer-item-main-flex-left span {
  color: #a1a1a1;
  font-size: 13px;
  margin-top: 4px;
  display: block;
}

.cart-drawer-item-main-flex-right span {
  font-weight: 500;
  color: #212529;
  font-size: 14px;
}

.cart-drawer-quantity-selector {
  display: inline-flex;
  border: 1px solid #e7e7e7;
  border-radius: 4px;
  margin-top: 10px;
}

.cart-drawer-quantity-selector button {
  width: 28px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  user-select: none;
}

.cart-drawer-quantity-selector input {
  width: 28px;
  font-size: 13px;
  text-align: center;
  line-height: 24px;
  border-left: 1px solid #e7e7e7;
  border-right: 1px solid #e7e7e7;
}

.cart-drawer-footer {
  padding: 24px;
  margin-top: auto;
  border-top: 1px solid #e7e7e7;
}

.cart-drawer-footer-row {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 10px;
}

.cart-drawer-footer-row:last-of-type {
  margin-bottom: 16px;
}

.cart-drawer-footer-row h3 {
  font-weight: 400;
  color: #525252;
  font-size: 14px;
}

.cart-drawer-footer-row span {
  font-weight: 500;
  color: #212529;
  font-size: 14px;
}

.cart-drawer-button {
  display: block;
  width: 100%;
  font-weight: 500;
  background-color: #212529;
  color: #fff;
  line-height: 46px;
  font-size: 16px;
  border-radius: 6px;
}

.cart-drawer-empty {
  margin: auto;
  color: #212529;
}
</style>
<div class="cart-drawer">
  <div class="cart-drawer-box">
    {% comment %} Header section {% endcomment %}
    <header class="cart-drawer-header">
      <h2>Your cart</h2>

      <div class="cart-drawer-header-right">
        <span class="cart-drawer-header-right-items">{{ cart.item_count }} items</span>

        <button class="cart-drawer-header-right-close" type="button">
          {% render 'x.svg' %}
        </button>
      </div>
    </header>

    {% form 'cart', cart, class: 'cart-drawer-form' %}
      {% if cart.item_count == 0 %}
        <p class="cart-drawer-empty">Your cart is empty</p>
      {% else %}
        <div class="cart-drawer-items">
          {% for item in cart.items %}
            <div class="cart-drawer-item" data-line-item-key="{{ item.key }}">
              <div class="cart-drawer-item-image">
                <img src="{{ item.image | img_url: '200x' }}" alt="{{ item.title }}">
              </div>
              <div class="cart-drawer-item-main">
                <div class="cart-drawer-item-main-flex">
                  <div class="cart-drawer-item-main-flex-left">
                    <h3>
                      <a href="{{ item.url }}">{{ item.product.title }}</a>
                    </h3>
                    <span>{{ item.variant.title }}</span>
                    <div class="cart-drawer-quantity-selector">
                      <button class="cart-drawer-quantity-selector-minus" type="button">
                        {% render 'minus.svg' %}
                      </button>
                      <input type="text" readonly value="{{ item.quantity }}">
                      <button class="cart-drawer-quantity-selector-plus" type="button">{% render 'plus.svg' %}</button>
                    </div>
                  </div>
                  <div class="cart-drawer-item-main-flex-right">
                    <span>{{ item.final_line_price | money }}</span>
                  </div>
                </div>
              </div>
            </div>
          {% endfor %}
        </div>

        <footer class="cart-drawer-footer">
          {% if cart.total_discounts > 0 %}
            <div class="cart-drawer-footer-row">
              <h3>Discounts</h3>
              <span>{{ cart.total_discounts | money }}</span>
            </div>
          {% endif %}
          <div class="cart-drawer-footer-row">
            <h3>Subtotal</h3>
            <span>{{ cart.total_price | money }}</span>
          </div>
          <button type="submit" name="checkout" class="cart-drawer-button">Checkout</button>
        </footer>
      {% endif %}
    {% endform %}
  </div>
</div>


<div class="my-5 display-4 text-center">DRAWER CART</div>
<div class="product-page">
  <div class="container">
        <div class="row">
      {% for block in section.blocks %}  
      {%- assign product = all_products[block.settings.product] -%}
          <div class="col-md-3">
            <div class="card" style="width: 18rem;">
            <img src="{{ product.featured_image | img_url: 'master' }}">
    
          <div class="card-body">
            <div class="card-title"><h2>{{ product.title }}</h2></div>
            <p class="card-text">{{ selectedVariant.price | money }}</p>
    
            {% form 'product', product %}
              <label class="product-option">Options</label>
              <select class="product-select" name="id">
                {% for variant in product.variants %}
                  <option
                    {% if selectedVariant.id == variant.id %}
                      selected
                    {% endif %}
                    value="{{ variant.id }}"
                  >
                    {{ variant.title }}
                  </option>
                {% endfor %}
              </select>
    
              <div class="product-quantity">
                <label for="quantity">Quantity</label>
                <input name="quantity" id="quantity" value="1">
              </div>
              <button class="btn btn-success btn-lg py-2 px-2 my-2 mx-2" id="btn-cart">Add to cart</button>
            {% endform %}
          </div>
          </div>
          </div>
      {% endfor %}
    </div>
  </div>
</div>
<!-- <button class="btn btn-success btn-lg py-2 px-2 my-2 mx-2">CART</button> -->



<script>
  function openCartDrawer() {
  document.querySelector(".cart-drawer").classList.add("cart-drawer--active");
}

function closeCartDrawer() {
  document
    .querySelector(".cart-drawer")
    .classList.remove("cart-drawer--active");
}

function updateCartItemCounts(count) {
  document.querySelectorAll(".cart-count").forEach((el) => {
    el.textContent = count;
  });
}

async function updateCartDrawer() {
  const res = await fetch("/?section_id=cart-drawer");
  const text = await res.text();
  const html = document.createElement("div");
  html.innerHTML = text;

  const newBox = html.querySelector(".cart-drawer").innerHTML;

  document.querySelector(".cart-drawer").innerHTML = newBox;

  addCartDrawerListeners();
}

function addCartDrawerListeners() {
  // Update quantities
  document
    .querySelectorAll(".cart-drawer-quantity-selector button")
    .forEach((button) => {
      button.addEventListener("click", async () => {
        // Get line item key
        const rootItem =
          button.parentElement.parentElement.parentElement.parentElement
            .parentElement;
        const key = rootItem.getAttribute("data-line-item-key");

        // Get new quantity
        const currentQuantity = Number(
          button.parentElement.querySelector("input").value
        );
        const isUp = button.classList.contains(
          "cart-drawer-quantity-selector-plus"
        );
        const newQuantity = isUp ? currentQuantity + 1 : currentQuantity - 1;

        // Ajax update\
        const res = await fetch("/cart/update.js", {
          method: "post",
          headers: {
            Accept: "application/json",
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ updates: { [key]: newQuantity } }),
        });
        const cart = await res.json();

        updateCartItemCounts(cart.item_count);

        // Update cart
        updateCartDrawer();
      });
    });

  document.querySelector(".cart-drawer-box").addEventListener("click", (e) => {
    e.stopPropagation();
  });

  document
    .querySelectorAll(".cart-drawer-header-right-close, .cart-drawer")
    .forEach((el) => {
      el.addEventListener("click", () => {
        console.log("closing drawer");
        closeCartDrawer();
      });
    });
}

addCartDrawerListeners();

document.querySelectorAll('form[action="/cart/add"]').forEach((form) => {
  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    // Submit form with ajax
    await fetch("/cart/add", {
      method: "post",
      body: new FormData(form),
    });

    // Get cart count
    const res = await fetch("/cart.js");
    const cart = await res.json();
    updateCartItemCounts(cart.item_count);

    // Update cart
    await updateCartDrawer();

    // Open cart drawer
    openCartDrawer();
  });
});

document.querySelectorAll('a[href="/cart"]').forEach((a) => {
  a.addEventListener("click", (e) => {
    e.preventDefault();
    openCartDrawer();
  });
});
</script>
<!-- <script>
  $('#btn-cart').click(function() 
{
    $.ajax
    ({ 
        type: 'POST',
        url: '/cart/add.js',
        data: {
            quantity: $('#quantity').val(),
            id: $('#test_product_id').val()
          },
        dataType: 'json', 
         success: function (item) { 
           $('cart-drawer').addClass('active');
          $.ajax({
                url: '/?section_id=cart-drawer',
                type: 'GET',
                dataType: 'html',
                success:function(carthtml) {
                  if($("cart-drawer.drawer").hasClass('is-empty')){
                      $('cart-drawer').html($(carthtml).find('cart-drawer').html());
                      $("cart-drawer.is-empty .drawer__header").css("display", "block");
                      $("cart-drawer.is-empty .drawer__footer").css("display", "block");
                      $("cart-drawer.is-empty .cart__contents").css("display", "block");
                      $("cart-drawer.drawer").removeClass('is-empty');
                      const productTitle = '<div class="ajax-cart-item__title">' + item.title + '</div>';
                      const productImage = '<img class="ajax-cart-item__image" src="' + item.image + '" >';
                      const productPrice = '<div class="ajax-cart-item__price">' + item.line_price + '</div>';
                      const productQuantity = '<div class="ajax-cart-item__quantity">' + item.quantity + '</div>';
                      const productRemove = '<div class="ajax-cart-item__remove ' + defaults.removeFromCartNoDot + '"></div>';
                      const concatProductInfo = '<div class="ajax-cart-item__single" data-line="' + Number(index + 1) + '">' + productTitle + productImage + productPrice + productQuantity + productRemove + '</div>';
                      $("#CartDrawer-Overlay").click(function(){
                         $("cart-drawer.drawer").removeClass('active');
                      });
                  } else {
                     $("cart-drawer").html($(carthtml).find('cart-drawer').html());
                  }
                }
              });
         } 
    });
});
</script> -->

{% schema %}
  {
    "name": "cust-feat-product",
    "tag" : "section",
    "settings" : [],
    "blocks": [
      {
        "type": "product",
        "name": "product",
        "settings": [
          {
            "type": "product",
            "id": "product",
            "label": "Product"
          },
          {
            "type": "text",
            "id": "footnote",
            "label": "Add Foot Note"
          }
        ]
      }],
    "presets": [
    {
      "name": "cust-feat-product",
      "blocks" : [{"type":"product"}]
    }
  ]
  }
{% endschema %}